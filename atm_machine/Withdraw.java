/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package atm_machine;

import Database.select;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author glenn
 */
public class Withdraw extends javax.swing.JFrame {
    
    Connection conn = null;
    ResultSet rs = null;
    Statement st = null;

    /**
     * Creates new form Withdraw
     */
    public Withdraw() {
        initComponents();
    }
    
    int acc;
    public Withdraw(int AccNum) throws ClassNotFoundException, SQLException  {
        initComponents();
        acc = AccNum;
        accNumDisplay.setText("" + acc);
        //getBalance();
    }
    
   
    
  
//    int oldBalance;
//    
//    public void getBalance() throws ClassNotFoundException {
//        ResultSet rss = null;
//
//        String query = "SELECT * FROM CUSTOMER WHERE ACCOUNTBALANCE = '"+acc+"'";
//            rss = select.getData(query);
//        try {
//            if (rss.next()) {
//                oldBalance = rs.getInt(8);
//                balanceDisplay.setText("" + oldBalance);
//                //JOptionPane.showMessageDialog(this, "Your current balance has been updated " + oldBalance);
//
//            }else{
//                //Joption
//            }
//        } catch (SQLException e) {
//        }
//
//    }
    
    int oldBalance;
   
    public int getBalance() throws ClassNotFoundException, SQLException {
        
      
        ResultSet rss = null;
        

        String sql = "SELECT * FROM CUSTOMER WHERE CUSTOMERID = '"+acc+"'";
        rs = select.getData(sql);
        try {
            if (rss.next()) {
                oldBalance = rss.getInt(8);
                //balanceDisplay.setText("" + oldBalance);
            } else {
                //Joption
                //JOptionPane.showMessageDialog(this, "please enter a valid input");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return oldBalance;
    }

    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Withdraw().setVisible(true);

            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        accNumDisplay = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        AmountWithdraw = new javax.swing.JTextField();
        WithdrawAmount = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        balanceDisplay = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(0, 255, 204));
        jPanel2.setForeground(new java.awt.Color(102, 51, 255));

        jLabel2.setText("Account No:");

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Dialog", 2, 18)); // NOI18N
        jLabel1.setText("PROMISING TIME ATM");

        accNumDisplay.setText("jLabel5");

        jPanel3.setBackground(new java.awt.Color(51, 123, 145));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("WITHDRAW");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 255, 204), null));

        jLabel4.setText(" WITHDRAW AMOUNT:");

        AmountWithdraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AmountWithdrawActionPerformed(evt);
            }
        });

        WithdrawAmount.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        WithdrawAmount.setForeground(new java.awt.Color(204, 0, 0));
        WithdrawAmount.setText("CONFIRM");
        WithdrawAmount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WithdrawAmountMouseClicked(evt);
            }
        });
        WithdrawAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WithdrawAmountActionPerformed(evt);
            }
        });

        jButton1.setText("BACK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        balanceDisplay.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setText("BALANCE");

        jLabel5.setForeground(new java.awt.Color(255, 51, 51));
        jLabel5.setText("PLEASE ADD THE NEGATIVE SIGN BEFORE THE AMOUNT");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(balanceDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AmountWithdraw, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(WithdrawAmount))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jLabel3))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel5)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel3)
                .addGap(7, 7, 7)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(balanceDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(AmountWithdraw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(WithdrawAmount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jButton1))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(jLabel1))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(accNumDisplay))
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(accNumDisplay))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void WithdrawAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WithdrawAmountActionPerformed

//        String withdraw = AmountWithdraw.getText();
//        if (withdraw.isEmpty() || withdraw.equals(0)) {
//            JOptionPane.showMessageDialog(this, "Please enter a Valid input");
//
//        } else if (oldBalance <= Integer.valueOf(AmountWithdraw.getText())) {
//            JOptionPane.showMessageDialog(this, "Balance cannot go Overdraft");
//
//        } else {
//            try {
//                java.sql.PreparedStatement pstmt;
//                String Query = "UPDATE CUSTOMER set ACCOUNTBALANCE = ? WHERE CUSTOMERID = ?";
//                pstmt = CustomerDB.getConnection().prepareStatement(Query);
//                pstmt.setInt(1, oldBalance - Integer.valueOf(AmountWithdraw.getText()));
//                pstmt.setInt(2, acc);
//                
//                if(pstmt.executeUpdate() == 1){
//                    JOptionPane.showMessageDialog(this, "Your Total Balance has been updated");
//                }else{
//                    JOptionPane.showMessageDialog(this, "Missing fields, Please fill all information");
//                }
//                pstmt.executeUpdate();
//                pstmt.close();
//
//            } catch (ClassNotFoundException ex) {
//                JOptionPane.showMessageDialog(this, ex);
//            } catch (SQLException ex) {
//                JOptionPane.showMessageDialog(this, ex);
//            }

            String withdraw = AmountWithdraw.getText().trim();
        if (withdraw.isEmpty()|| withdraw.equals(0)) {
            JOptionPane.showMessageDialog(this, "Please enter a Valid input");
        
        } else if (oldBalance < Integer.valueOf(AmountWithdraw.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Balance cannot go Overdraft");

        }
        else {
            try {
                java.sql.PreparedStatement pstmt;
                String Query = "UPDATE CUSTOMER SET ACCOUNTBALANCE = ? WHERE CUSTOMERID = ?";
                pstmt = CustomerDB.getConnection().prepareStatement(Query);
                pstmt.setInt(1, oldBalance-Integer.valueOf(AmountWithdraw.getText().trim()));
                pstmt.setInt(2, acc);
                
                if(pstmt.executeUpdate() == 1){
                    JOptionPane.showMessageDialog(this, "Your Total Balance has been updated");
                }else{
                    JOptionPane.showMessageDialog(this, "Missing fields");
                }
                pstmt.executeUpdate();
                pstmt.close();

            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, ex);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
    
        }
        
    }//GEN-LAST:event_WithdrawAmountActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        setVisible(false);
        Account_Window acc_win = new Account_Window();
        acc_win.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void WithdrawAmountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WithdrawAmountMouseClicked
      
//        String deposit = AmountWithdraw.getText();
//        if (deposit.isEmpty()|| deposit.equals(0)) {
//            JOptionPane.showMessageDialog(this, "Please enter a Valid input");
//        
//        } else if (oldBalance < Integer.valueOf(AmountWithdraw.getText())) {
//            JOptionPane.showMessageDialog(this, "Balance cannot go Overdraft");
//
//        }
//        else {
//            try {
//                java.sql.PreparedStatement pstmt;
//                String Query = "UPDATE CUSTOMER set ACCOUNTBALANCE = ? where CUSTOMERID = ?";
//                pstmt = CustomerDB.getConnection().prepareStatement(Query);
//                pstmt.setInt(1, oldBalance-Integer.valueOf(AmountWithdraw.getText()));
//                pstmt.setInt(2, acc);
//                
//                if(pstmt.executeUpdate() == 1){
//                    JOptionPane.showMessageDialog(this, "Your Total Balance has been updated");
//                }else{
//                    JOptionPane.showMessageDialog(this, "Missing fields");
//                }
//                pstmt.executeUpdate();
//                pstmt.close();
//
//            } catch (ClassNotFoundException ex) {
//                JOptionPane.showMessageDialog(this, ex);
//            } catch (SQLException ex) {
//                JOptionPane.showMessageDialog(this, ex);
//            }
//
//        }
                    
    }//GEN-LAST:event_WithdrawAmountMouseClicked

    private void AmountWithdrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AmountWithdrawActionPerformed

        AmountWithdraw.getText();
    }//GEN-LAST:event_AmountWithdrawActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AmountWithdraw;
    private javax.swing.JButton WithdrawAmount;
    private javax.swing.JLabel accNumDisplay;
    private javax.swing.JLabel balanceDisplay;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
